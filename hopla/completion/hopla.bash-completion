#!/usr/bin/env bash

_autocomplete_hopla_add(){
  local wordlist cur
  wordlist="todo --help"
  cur="${COMP_WORDS[COMP_CWORD]}"
  COMPREPLY=( $(compgen -W "${wordlist}" -- "${cur}" ) )
}

_autocomplete_hopla_api(){
  local wordlist cur
  # todo: You can ls in the right directory to get this list dynamically
  #       This way you don't have to remember to add new autocomplete words
  wordlist="status version content --help"
  cur="${COMP_WORDS[COMP_CWORD]}"
  COMPREPLY=( $(compgen -W "${wordlist}" -- "${cur}" ) )
}


_autocomplete_hopla_buy(){
  local wordlist cur
  wordlist="enchanted-armoire --help"
  cur="${COMP_WORDS[COMP_CWORD]}"
  COMPREPLY=( $(compgen -W "${wordlist}" -- "${cur}" ) )
}

_autocomplete_hopla_completion(){
  local wordlist cur
  wordlist="bash --help"
  cur="${COMP_WORDS[COMP_CWORD]}"
  COMPREPLY=( $(compgen -W "${wordlist}" -- "${cur}" ) )
}

_autocomplete_hopla_set(){
  local wordlist cur
  wordlist="config credentials --help"
  cur="${COMP_WORDS[COMP_CWORD]}"
  COMPREPLY=( $(compgen -W "${wordlist}" -- "${cur}" ) )
}

_autocomplete_hopla_get(){
  local wordlist cur
  # TODO: we can autocomplete this even further
  wordlist="user-info --help"
  cur="${COMP_WORDS[COMP_CWORD]}"
  COMPREPLY=( $(compgen -W "${wordlist}" -- "${cur}" ) )
}


_autocomplete_hopla() {
  local wordlist cur second_word
  # Todo: make dynamic based on available commands
  cur="${COMP_WORDS[COMP_CWORD]}"
  second_word="${COMP_WORDS[$((COMP_CWORD - 1))]}"

  if [[ ${COMP_CWORD} -eq 1 ]] ; then
    wordlist="add api buy completion set get --help"
    COMPREPLY=( $(compgen -W "${wordlist}" -- "${cur}" ) )
  elif [[ $second_word == "add" ]] ; then
    _autocomplete_hopla_add
  elif [[ $second_word == "api" ]] ; then
    _autocomplete_hopla_api
  elif [[ $second_word == "buy" ]] ; then
    _autocomplete_hopla_buy
  elif [[ $second_word == "completion" ]] ; then
    _autocomplete_hopla_completion
  elif [[ $second_word == "set" ]] ; then
    _autocomplete_hopla_set
  elif [[ $second_word == "get" ]] ; then
    _autocomplete_hopla_get
  else
    COMPREPLY=( )
  fi
}
complete -F _autocomplete_hopla "hopla"

