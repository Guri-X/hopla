#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

print_script_dir() {
  local this_script=$(perl -e 'use Cwd "abs_path"; print abs_path(shift)' "$0")
  local this_script_dir=$(dirname "${this_script}")
  echo "${this_script_dir}"
}
script_dirname=$(print_script_dir)

print_library_dir() {
  local script_dirname="$(print_script_dir)"
  local library_dirname="$(realpath "${script_dirname}/../library/")"
  echo "${library_dirname}"
}

declare -xr library_dir=$(print_library_dir)
source "${library_dir}/api_proxy.sh"
source "${library_dir}/logging.sh"


print_hopla_auth_file() {
  local file_path=
  if [[ -n "${HOPLA_AUTH_FILE-}" && -f "${HOPLA_AUTH_FILE-}" ]] ; then
    file_path="${HOPLA_AUTH_FILE}"
  elif [[ -n "${XDG_DATA_HOME-}" && -d "${XDG_DATA_HOME-}" ]] ; then
    file_path="${XDG_DATA_HOME}/hopla/auth.conf"
  else
    file_path="${HOME}/.local/share/hopla/auth.conf"
  fi
  echo "${file_path}"
}
declare -xr auth_file_path=$(print_hopla_auth_file)
debug "auth_file_path ${auth_file_path}"


print_hopla_config_file() {
  local file_path=
  if [[ -n "${HOPLA_CONFIG_FILE-}" && -f "${HOPLA_CONFIG_FILE-}" ]] ; then
    file_path="${HOPLA_CONFIG_FILE}"
  elif [[ -n "${XDG_CONFIG_HOME-}" && -d "${XDG_CONFIG_HOME-}" ]] ; then
    file_path="${XDG_CONFIG_HOME}/auth.conf"
  else
    file_path="${HOME}/.config/hopla/hopla.conf"
  fi
  echo "${file_path}"
}
declare -xr config_file_path=$(print_hopla_config_file)
debug "config_file_path: ${config_file_path}"


read_credentials() {
  debug "read_credentials"
  if [[ -f ${auth_file_path} ]]; then
    source "${auth_file_path}"
    # TODO: syntax checking
    export user_id="${auth_file_user_id:?"user id is not set in the credentials file"}"
    export api_token="${auth_file_api_token:?"api token is not set in the credentials file"}"

    if [[ -z "${user_id}" || -z "${api_token}" ]]; then
      echo "no credentials found:"
      "${script_dirname}/set/credentials"
    fi
  else
    echo "no credential file found"
    "${script_dirname}/set/credentials"
  fi
}
read_credentials


handle_global_options() {
  if [[ "$1" == "--help" ]]; then
    cat "${script_dirname}/hopla.help"
    exit 0
  fi
}
handle_global_options "$@"

command_file="${script_dirname}"
command_counter=1
while [[ -d "${command_file}" && "${command_counter}" -le $# ]]; do
  command_file="${command_file}/${!command_counter}"
  command_counter=$((command_counter + 1))
done
# TODO: add error handling for command_file not existing or being a directory

arguments="${*:$command_counter}"

debug "File to be executed: ${command_file}"
debug "Commands to be passed: ${arguments}"

"${command_file}" "${arguments}"

